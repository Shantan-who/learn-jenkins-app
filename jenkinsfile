pipeline {
    agent any
    environment{
        NETLIFY_SITE_ID = 'c8c95bd6-3534-40e7-b723-1617753c2cf1'
        NETLIFY_AUTH_ID =  credentials('netlify-token')
         }

    stages {
        stage('Build'){
            agent{
                docker{
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps { 
                sh '''
                ls -la
                npm --version
                node --version
                npm ci
                npm run build
                ls -la
                '''
            }
        }
        stage ('Run Tests'){
            parallel{
                stage ('Unit Test'){
            agent{
                docker{
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps{
                sh '''
                   #test -f build/index.html 
                   npm test
                   ''' 
            }
            }
                stage ('E2E'){
                agent{
                    docker{
                        image 'mcr.microsoft.com/playwright:v1.39.0-jammy'
                        reuseNode true
                    }
                }
                steps{
                    sh '''
                        npm install serve 
                        node_modules/.bin/serve -s build &
                        sleep 10
                        npx playwright test --reporter=html
                    ''' 
                }
                }  
            }
        }
     stage('Deploy'){
                    agent{
                        docker{
                            image 'node:18-alpine'
                            reuseNode true
                        }
                    }
                    steps { 
                        sh '''
                            npm install netlify-cli
                            node_modules/.bin/netlify --version
                            echo "Production site ID is :$NETLIFY_SITE_ID"
                            node_modules/.bin/netlify status
                            node_modules/.bin/netlify deploy --dir=build --prod
                            

                           '''
                    }
                }

 }
        post {
                    always{
                    junit 'jest-results/junit.xml'
                    publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'HTML Report', reportTitles: '', useWrapperFileDirectly: true])
                        }
            }
}
    
